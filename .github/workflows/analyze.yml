name: analyze-action

on:
  push:
    branches: [ main, develop, develop/*, develop*, feature*, feature/*, task*, task/*, hotfix*, hotfix/*]
  pull_request:
    branches: [ main, develop, develop/*, develop*, feature*, feature/* ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: get premake5
      run: |
       wget -qO- https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-linux.tar.gz | \
       tar xvz premake5 | \
       xargs -I"{}" sudo mv {} /usr/bin

    - name: get cppcheck
      run: DEBIAN_FRONTEND=noninteractive sudo apt-get update -yqq --allow-releaseinfo-change -o::Dpkg::Use-Pty=0 && DEBIAN_FRONTEND=noninteractive sudo apt-get install -yqq -o::Dpkg::Use-Pty=0 cppcheck

    - name: get dependencies
      run: DEBIAN_FRONTEND=noninteractive sudo apt-get install -yqq -o::Dpkg::Use-Pty=0 libopenal-dev build-essential libgl1-mesa-dev libglm-dev libglfw3-dev ocl-icd-opencl-dev libc++abi-dev

    - name: get intercept-build
      run: pip install scan-build

    - name: premake
      run: |
       premake5 --file=premake5.lua gmake && \
       premake5 --file=premake5.lua vs2019

    - name: build legion dependencies
      run: make CXX=clang++-12 config=debug64 legion-core

    - name: intercept-build & analyze-build
      run: |
       /home/runner/.local/bin/intercept-build make --dry-run CXX=clang++-12 config=debug64 all && \
       /home/runner/.local/bin/analyze-build --status-bugs

    - name: cppcheck
      run: cppcheck --project=legion-engine.sln --inline-suppr --suppress=syntaxError --xml --error-exitcode=1 2>&1 | python3 tools/cppcheck2github.py
